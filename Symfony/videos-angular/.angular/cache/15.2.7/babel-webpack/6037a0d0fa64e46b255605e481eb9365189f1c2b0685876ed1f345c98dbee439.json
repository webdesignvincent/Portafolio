{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { global } from './global';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(_http) {\n    this._http = _http;\n    this.url = global.url;\n  }\n  register(user) {\n    // Convertir el objeto del usuario a un json string\n    let params = JSON.stringify(user);\n    // Definir las cabeceras\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    // Hacer peticiones ajax\n    return this._http.post(this.url + 'register', params, {\n      headers: headers\n    });\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac\n});","map":{"version":3,"mappings":"AACA,SAAoBA,WAAW,QAAQ,sBAAsB;AAG7D,SAASC,MAAM,QAAQ,UAAU;;;AAGjC,OAAM,MAAOC,WAAW;EAIpBC,YACYC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAEb,IAAI,CAACC,GAAG,GAAGJ,MAAM,CAACI,GAAG;EACzB;EAEAC,QAAQ,CAACC,IAAU;IACrB;IACA,IAAIC,MAAM,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IACjC;IACA,IAAII,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,cAAc,EAAC,kBAAkB,CAAC;IACtE;IACA,OAAO,IAAI,CAACR,KAAK,CAACS,IAAI,CAAC,IAAI,CAACR,GAAG,GAAC,UAAU,EAAEG,MAAM,EAAE;MAACG,OAAO,EAACA;IAAO,CAAC,CAAC;EACvE;;AAjBYT,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;AAAA","names":["HttpHeaders","global","UserService","constructor","_http","url","register","user","params","JSON","stringify","headers","set","post","factory"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\Full-Stack\\Symfony\\videos-angular\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../models/user';\r\nimport { global } from './global';\r\n\r\n@Injectable()\r\nexport class UserService{\r\n\r\n    public url: string;\r\n\r\n    constructor(\r\n        private _http: HttpClient\r\n    ){\r\n        this.url = global.url;\r\n    }\r\n\r\n    register(user: User): Observable<any>{\r\n\t\t// Convertir el objeto del usuario a un json string\r\n\t\tlet params = JSON.stringify(user);\r\n\t\t// Definir las cabeceras\r\n\t\tlet headers = new HttpHeaders().set('Content-Type','application/json');\r\n\t\t// Hacer peticiones ajax\r\n\t\treturn this._http.post(this.url+'register', params, {headers:headers});\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}