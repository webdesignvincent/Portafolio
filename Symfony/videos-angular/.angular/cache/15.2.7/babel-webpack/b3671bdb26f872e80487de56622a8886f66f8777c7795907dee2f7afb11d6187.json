{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./user.service\";\nexport class IdentityGuard {\n  constructor(_router, _userService) {\n    this._router = _router;\n    this._userService = _userService;\n  }\n  canActivate() {\n    let identity = this._userService.getIdentity();\n    if (identity && identity.sub) {\n      return true;\n    } else {\n      this._router.navigate(['/login']);\n      return false;\n    }\n  }\n}\nIdentityGuard.ɵfac = function IdentityGuard_Factory(t) {\n  return new (t || IdentityGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.UserService));\n};\nIdentityGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: IdentityGuard,\n  factory: IdentityGuard.ɵfac\n});","map":{"version":3,"mappings":";;;AAKA,OAAM,MAAOA,aAAa;EAEzBC,YACSC,OAAe,EACfC,YAAyB;IADzB,YAAO,GAAPD,OAAO;IACP,iBAAY,GAAZC,YAAY;EACnB;EAEFC,WAAW;IAEV,IAAIC,QAAQ,GAAG,IAAI,CAACF,YAAY,CAACG,WAAW,EAAE;IAE9C,IAAGD,QAAQ,IAAIA,QAAQ,CAACE,GAAG,EAAC;MAC3B,OAAO,IAAI;KACX,MAAI;MACJ,IAAI,CAACL,OAAO,CAACM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAC/B,OAAO,KAAK;;EAEhB;;AAjBYR,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAS,SAAbT,aAAa;AAAA","names":["IdentityGuard","constructor","_router","_userService","canActivate","identity","getIdentity","sub","navigate","factory"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\Full-Stack\\Symfony\\videos-angular\\src\\app\\services\\identity.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable()\r\nexport class IdentityGuard implements CanActivate{\r\n\r\n\tconstructor(\r\n\t\tprivate _router: Router,\r\n\t\tprivate _userService: UserService\r\n\t){}\r\n\r\n\tcanActivate(){\r\n\r\n\t\tlet identity = this._userService.getIdentity();\r\n\r\n\t\tif(identity && identity.sub){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\tthis._router.navigate(['/login']);\r\n  \t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}