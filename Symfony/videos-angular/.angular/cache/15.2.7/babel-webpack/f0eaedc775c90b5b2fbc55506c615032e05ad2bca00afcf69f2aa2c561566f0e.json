{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./user.service\";\nexport class IdentityGuard {\n  constructor(_router, _userService) {\n    this._router = _router;\n    this._userService = _userService;\n  }\n  canActivate() {\n    let identity = this._userService.getIdentity();\n    if (identity) {\n      return true;\n    } else {\n      this._router.navigate(['/login']);\n      return false;\n    }\n  }\n}\nIdentityGuard.ɵfac = function IdentityGuard_Factory(t) {\n  return new (t || IdentityGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.UserService));\n};\nIdentityGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: IdentityGuard,\n  factory: IdentityGuard.ɵfac\n});","map":{"version":3,"mappings":";;;AAKA,OAAM,MAAOA,aAAa;EAEtBC,YACYC,OAAe,EACfC,YAAyB;IADzB,YAAO,GAAPD,OAAO;IACP,iBAAY,GAAZC,YAAY;EACtB;EAEFC,WAAW;IACP,IAAIC,QAAQ,GAAG,IAAI,CAACF,YAAY,CAACG,WAAW,EAAE;IAE9C,IAAGD,QAAQ,EAAC;MACR,OAAO,IAAI;KACd,MAAI;MACD,IAAI,CAACH,OAAO,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MACjC,OAAO,KAAK;;EAEpB;;AAhBSP,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAQ,SAAbR,aAAa;AAAA","names":["IdentityGuard","constructor","_router","_userService","canActivate","identity","getIdentity","navigate","factory"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\Full-Stack\\Symfony\\videos-angular\\src\\app\\services\\identity.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable()\r\nexport class IdentityGuard implements CanActivate{\r\n\r\n    constructor(\r\n        private _router: Router,\r\n        private _userService: UserService\r\n    ){}\r\n\r\n    canActivate(){\r\n        let identity = this._userService.getIdentity();\r\n\r\n        if(identity){\r\n            return true;\r\n        }else{\r\n            this._router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}