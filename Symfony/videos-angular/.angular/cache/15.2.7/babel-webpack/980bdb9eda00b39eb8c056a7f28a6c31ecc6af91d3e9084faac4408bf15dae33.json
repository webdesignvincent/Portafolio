{"ast":null,"code":"import { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/user.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction UserEditComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Has actualizado tus datos correctamente \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserEditComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" No has actualizado tus datos \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserEditComponent_small_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \" El nombre no es v\\u00E1lido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserEditComponent_small_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \" Los apellidos no son v\\u00E1lidos \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserEditComponent_small_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 19);\n    i0.ɵɵtext(1, \" El email no es valido \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UserEditComponent {\n  constructor(_userService) {\n    this._userService = _userService;\n    this.page_title = \"Ajustes de usuario\";\n    this.status = 'Error';\n    this.identity = this._userService.getIdentity();\n    this.token = this._userService.getToken();\n    // RELLENAR OBJETO USUARIO\n    this.user = new User(this.identity.sub, this.identity.name, this.identity.surname, this.identity.email, '', this.identity.role, this.identity.createdAt);\n  }\n  ngOnInit() {\n    console.log('UserEditComponent Cargado!');\n    this.identity = this._userService.getIdentity();\n    this.token = this._userService.getToken();\n  }\n  ngDoCheck() {\n    this.identity = this._userService.getIdentity();\n    this.token = this._userService.getToken();\n  }\n  onSubmit(form) {\n    this._userService.update(this.token, this.user).subscribe(response => {\n      if (response && response.status == 'success') {\n        this.status = 'success';\n        this.identity = response.user;\n        this.user = response.user;\n        localStorage.setItem('identity', JSON.stringify(this.user));\n      } else {\n        this.status = 'error';\n      }\n    }, error => {\n      this.status = 'error';\n      console.log(error);\n    });\n  }\n}\nUserEditComponent.ɵfac = function UserEditComponent_Factory(t) {\n  return new (t || UserEditComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n};\nUserEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserEditComponent,\n  selectors: [[\"app-user-edit\"]],\n  features: [i0.ɵɵProvidersFeature([UserService])],\n  decls: 27,\n  vars: 10,\n  consts: [[1, \"col-md-12\", \"mt-3\"], [\"class\", \"alert alert-success col-md-5 mt-3\", 4, \"ngIf\"], [\"class\", \"alert alert-danger col-md-5 mt-3\", 4, \"ngIf\"], [1, \"col-md-5\", \"ml-0\", \"pl-0\", 3, \"ngSubmit\"], [\"userEditForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"name\", \"name\", \"required\", \"\", \"pattern\", \"[a-zA-Z\\u00C0-\\u00FF ]+\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [\"class\", \"invalid-feedback d-block\", 4, \"ngIf\"], [\"for\", \"surname\"], [\"type\", \"text\", \"name\", \"surname\", \"required\", \"\", \"pattern\", \"[a-zA-Z\\u00C0-\\u00FF ]+\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"surname\", \"ngModel\"], [\"for\", \"email\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", \"pattern\", \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"email\", \"ngModel\"], [\"type\", \"submit\", \"value\", \"Actualizar\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"alert\", \"alert-success\", \"col-md-5\", \"mt-3\"], [1, \"alert\", \"alert-danger\", \"col-md-5\", \"mt-3\"], [1, \"invalid-feedback\", \"d-block\"]],\n  template: function UserEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r9 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"hr\");\n      i0.ɵɵtemplate(4, UserEditComponent_div_4_Template, 2, 0, \"div\", 1);\n      i0.ɵɵtemplate(5, UserEditComponent_div_5_Template, 2, 0, \"div\", 2);\n      i0.ɵɵelementStart(6, \"form\", 3, 4);\n      i0.ɵɵlistener(\"ngSubmit\", function UserEditComponent_Template_form_ngSubmit_6_listener() {\n        i0.ɵɵrestoreView(_r9);\n        const _r2 = i0.ɵɵreference(7);\n        return i0.ɵɵresetView(ctx.onSubmit(_r2));\n      });\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\", 6);\n      i0.ɵɵtext(10, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 7, 8);\n      i0.ɵɵlistener(\"ngModelChange\", function UserEditComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.user.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, UserEditComponent_small_13_Template, 2, 0, \"small\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 5)(15, \"label\", 10);\n      i0.ɵɵtext(16, \"Apellidos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 11, 12);\n      i0.ɵɵlistener(\"ngModelChange\", function UserEditComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.user.surname = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, UserEditComponent_small_19_Template, 2, 0, \"small\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 5)(21, \"label\", 13);\n      i0.ɵɵtext(22, \"Correo electr\\u00F3nico\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"input\", 14, 15);\n      i0.ɵɵlistener(\"ngModelChange\", function UserEditComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(25, UserEditComponent_small_25_Template, 2, 0, \"small\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 16);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(7);\n      const _r3 = i0.ɵɵreference(12);\n      const _r5 = i0.ɵɵreference(18);\n      const _r7 = i0.ɵɵreference(24);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.page_title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.status == \"success\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.status == \"error\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !_r3.valid && _r3.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.surname);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !_r5.valid && _r5.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !_r7.valid && _r7.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", _r2.invalid);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.PatternValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["User","UserService","i0","UserEditComponent","constructor","_userService","page_title","status","identity","getIdentity","token","getToken","user","sub","name","surname","email","role","createdAt","ngOnInit","console","log","ngDoCheck","onSubmit","form","update","subscribe","response","localStorage","setItem","JSON","stringify","error","selectors","features","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\Full-Stack\\Symfony\\videos-angular\\src\\app\\components\\user-edit\\user-edit.component.ts","C:\\xampp\\htdocs\\Full-Stack\\Symfony\\videos-angular\\src\\app\\components\\user-edit\\user-edit.component.html"],"sourcesContent":["import { Component, OnInit, DoCheck } from '@angular/core';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css'],\n  providers: [UserService]\n})\nexport class UserEditComponent implements OnInit, DoCheck{\n\n  public page_title: string;\n  public user: User;\n  public status: string;\n  public identity: any;\n  public token: any;\n\n  constructor(\n      private _userService: UserService\n  ){\n      this.page_title = \"Ajustes de usuario\";\n      this.status = 'Error';\n      this.identity = this._userService.getIdentity();\n      this.token = this._userService.getToken();\n      // RELLENAR OBJETO USUARIO\n      this.user = new User(this.identity.sub, \n                          this.identity.name,\n                          this.identity.surname, \n                          this.identity.email,\n                          '',\n                          this.identity.role,\n                          this.identity.createdAt\n                      );\n  }\n\n  ngOnInit(): void {\n    console.log('UserEditComponent Cargado!');\n    this.identity = this._userService.getIdentity();\n    this.token = this._userService.getToken(); \n  }\n\n  ngDoCheck(): void {\n    this.identity = this._userService.getIdentity();\n    this.token = this._userService.getToken();      \n  }\n\n  onSubmit(form:any){\n      this._userService.update(this.token, this.user).subscribe(\n          response =>{\n              if(response && response.status == 'success'){\n                  this.status = 'success';\n                  this.identity = response.user;\n                  this.user = response.user;\n                  localStorage.setItem('identity',JSON.stringify(this.user));\n              }else{\n                  this.status = 'error';\n              }\n          },\n          error =>{\n              this.status = 'error';\n              console.log(<any>error);          \n          }\n      );\n  }\n\n}\n","<div class=\"col-md-12 mt-3\">\n    <h1>{{page_title}}</h1>\n    <hr>\n\n    <div class=\"alert alert-success col-md-5 mt-3\" *ngIf=\"status == 'success'\">\n\t\tHas actualizado tus datos correctamente\n\t</div>\n\n\t<div class=\"alert alert-danger col-md-5 mt-3\" *ngIf=\"status == 'error'\">\n\t\tNo has actualizado tus datos\n\t</div>\n\n    <form class=\"col-md-5 ml-0 pl-0\" #userEditForm=\"ngForm\" (ngSubmit)=\"onSubmit(userEditForm)\">\n\n        <div class=\"form-group\">\n\t\t\t<label for=\"name\">Nombre</label>\n\t\t\t<input type=\"text\" name=\"name\" class=\"form-control\" #name=\"ngModel\" [(ngModel)]=\"user.name\" required pattern=\"[a-zA-ZÀ-ÿ ]+\" />\n\n\t\t\t<small *ngIf=\"!name.valid && name.touched\" class=\"invalid-feedback d-block\">\n\t\t\t\tEl nombre no es válido\n\t\t\t</small>\n\t\t</div>\n\n\t\t<div class=\"form-group\">\n\t\t\t<label for=\"surname\">Apellidos</label>\n\t\t\t<input type=\"text\" name=\"surname\" class=\"form-control\" #surname=\"ngModel\" [(ngModel)]=\"user.surname\" required pattern=\"[a-zA-ZÀ-ÿ ]+\" />\n\n\t\t\t<small *ngIf=\"!surname.valid && surname.touched\" class=\"invalid-feedback d-block\">\n\t\t\t\tLos apellidos no son válidos\n\t\t\t</small>\n\t\t</div>\n\n\t\t<div class=\"form-group\">\n\t\t\t<label for=\"email\">Correo electrónico</label>\n\t\t\t<input type=\"email\" name=\"email\" class=\"form-control\" #email=\"ngModel\" [(ngModel)]=\"user.email\" required pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" />\n\n\t\t\t<small *ngIf=\"!email.valid && email.touched\" class=\"invalid-feedback d-block\">\n\t\t\t\tEl email no es valido\n\t\t\t</small>\n\t\t</div>\n\n        <input type=\"submit\" value=\"Actualizar\" class=\"btn btn-success\" [disabled]=\"userEditForm.invalid\" />\n        \n    </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}