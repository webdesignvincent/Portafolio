{"ast":null,"code":"/*\nLanguage: QML\nRequires: javascript.js, xml.js\nAuthor: John Foster <jfoster@esri.com>\nDescription: Syntax highlighting for the Qt Quick QML scripting language, based mostly off\n             the JavaScript parser.\nWebsite: https://doc.qt.io/qt-5/qmlapplications.html\nCategory: scripting\n*/\nfunction qml(hljs) {\n  const regex = hljs.regex;\n  const KEYWORDS = {\n    keyword: 'in of on if for while finally var new function do return void else break catch ' + 'instanceof with throw case default try this switch continue typeof delete ' + 'let yield const export super debugger as async await import',\n    literal: 'true false null undefined NaN Infinity',\n    built_in: 'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' + 'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' + 'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' + 'TypeError URIError Number Math Date String RegExp Array Float32Array ' + 'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' + 'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' + 'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' + 'Behavior bool color coordinate date double enumeration font geocircle georectangle ' + 'geoshape int list matrix4x4 parent point quaternion real rect ' + 'size string url variant vector2d vector3d vector4d ' + 'Promise'\n  };\n  const QML_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9\\\\._]*'; // Isolate property statements. Ends at a :, =, ;, ,, a comment or end of line.\n  // Use property class.\n\n  const PROPERTY = {\n    className: 'keyword',\n    begin: '\\\\bproperty\\\\b',\n    starts: {\n      className: 'string',\n      end: '(:|=|;|,|//|/\\\\*|$)',\n      returnEnd: true\n    }\n  }; // Isolate signal statements. Ends at a ) a comment or end of line.\n  // Use property class.\n\n  const SIGNAL = {\n    className: 'keyword',\n    begin: '\\\\bsignal\\\\b',\n    starts: {\n      className: 'string',\n      end: '(\\\\(|:|=|;|,|//|/\\\\*|$)',\n      returnEnd: true\n    }\n  }; // id: is special in QML. When we see id: we want to mark the id: as attribute and\n  // emphasize the token following.\n\n  const ID_ID = {\n    className: 'attribute',\n    begin: '\\\\bid\\\\s*:',\n    starts: {\n      className: 'string',\n      end: QML_IDENT_RE,\n      returnEnd: false\n    }\n  }; // Find QML object attribute. An attribute is a QML identifier followed by :.\n  // Unfortunately it's hard to know where it ends, as it may contain scalars,\n  // objects, object definitions, or javascript. The true end is either when the parent\n  // ends or the next attribute is detected.\n\n  const QML_ATTRIBUTE = {\n    begin: QML_IDENT_RE + '\\\\s*:',\n    returnBegin: true,\n    contains: [{\n      className: 'attribute',\n      begin: QML_IDENT_RE,\n      end: '\\\\s*:',\n      excludeEnd: true,\n      relevance: 0\n    }],\n    relevance: 0\n  }; // Find QML object. A QML object is a QML identifier followed by { and ends at the matching }.\n  // All we really care about is finding IDENT followed by { and just mark up the IDENT and ignore the {.\n\n  const QML_OBJECT = {\n    begin: regex.concat(QML_IDENT_RE, /\\s*\\{/),\n    end: /\\{/,\n    returnBegin: true,\n    relevance: 0,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {\n      begin: QML_IDENT_RE\n    })]\n  };\n  return {\n    name: 'QML',\n    aliases: ['qt'],\n    case_insensitive: false,\n    keywords: KEYWORDS,\n    contains: [{\n      className: 'meta',\n      begin: /^\\s*['\"]use (strict|asm)['\"]/\n    }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, {\n      // template string\n      className: 'string',\n      begin: '`',\n      end: '`',\n      contains: [hljs.BACKSLASH_ESCAPE, {\n        className: 'subst',\n        begin: '\\\\$\\\\{',\n        end: '\\\\}'\n      }]\n    }, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, {\n      className: 'number',\n      variants: [{\n        begin: '\\\\b(0[bB][01]+)'\n      }, {\n        begin: '\\\\b(0[oO][0-7]+)'\n      }, {\n        begin: hljs.C_NUMBER_RE\n      }],\n      relevance: 0\n    }, {\n      // \"value\" container\n      begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n      keywords: 'return throw case',\n      contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.REGEXP_MODE, {\n        // E4X / JSX\n        begin: /</,\n        end: />\\s*[);\\]]/,\n        relevance: 0,\n        subLanguage: 'xml'\n      }],\n      relevance: 0\n    }, SIGNAL, PROPERTY, {\n      className: 'function',\n      beginKeywords: 'function',\n      end: /\\{/,\n      excludeEnd: true,\n      contains: [hljs.inherit(hljs.TITLE_MODE, {\n        begin: /[A-Za-z$_][0-9A-Za-z$_]*/\n      }), {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        excludeBegin: true,\n        excludeEnd: true,\n        contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]\n      }],\n      illegal: /\\[|%/\n    }, {\n      // hack: prevents detection of keywords after dots\n      begin: '\\\\.' + hljs.IDENT_RE,\n      relevance: 0\n    }, ID_ID, QML_ATTRIBUTE, QML_OBJECT],\n    illegal: /#/\n  };\n}\n\nmodule.exports = qml;","map":{"version":3,"sources":["C:/xampp/htdocs/Full-Stack/NodeJS/foro-angular/node_modules/highlight.js/lib/languages/qml.js"],"names":["qml","hljs","regex","KEYWORDS","keyword","literal","built_in","QML_IDENT_RE","PROPERTY","className","begin","starts","end","returnEnd","SIGNAL","ID_ID","QML_ATTRIBUTE","returnBegin","contains","excludeEnd","relevance","QML_OBJECT","concat","inherit","TITLE_MODE","name","aliases","case_insensitive","keywords","APOS_STRING_MODE","QUOTE_STRING_MODE","BACKSLASH_ESCAPE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","variants","C_NUMBER_RE","RE_STARTERS_RE","REGEXP_MODE","subLanguage","beginKeywords","excludeBegin","illegal","IDENT_RE","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: QML\nRequires: javascript.js, xml.js\nAuthor: John Foster <jfoster@esri.com>\nDescription: Syntax highlighting for the Qt Quick QML scripting language, based mostly off\n             the JavaScript parser.\nWebsite: https://doc.qt.io/qt-5/qmlapplications.html\nCategory: scripting\n*/\n\nfunction qml(hljs) {\n  const regex = hljs.regex;\n  const KEYWORDS = {\n    keyword:\n      'in of on if for while finally var new function do return void else break catch '\n      + 'instanceof with throw case default try this switch continue typeof delete '\n      + 'let yield const export super debugger as async await import',\n    literal:\n      'true false null undefined NaN Infinity',\n    built_in:\n      'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent '\n      + 'encodeURI encodeURIComponent escape unescape Object Function Boolean Error '\n      + 'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError '\n      + 'TypeError URIError Number Math Date String RegExp Array Float32Array '\n      + 'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array '\n      + 'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require '\n      + 'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect '\n      + 'Behavior bool color coordinate date double enumeration font geocircle georectangle '\n      + 'geoshape int list matrix4x4 parent point quaternion real rect '\n      + 'size string url variant vector2d vector3d vector4d '\n      + 'Promise'\n  };\n\n  const QML_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9\\\\._]*';\n\n  // Isolate property statements. Ends at a :, =, ;, ,, a comment or end of line.\n  // Use property class.\n  const PROPERTY = {\n    className: 'keyword',\n    begin: '\\\\bproperty\\\\b',\n    starts: {\n      className: 'string',\n      end: '(:|=|;|,|//|/\\\\*|$)',\n      returnEnd: true\n    }\n  };\n\n  // Isolate signal statements. Ends at a ) a comment or end of line.\n  // Use property class.\n  const SIGNAL = {\n    className: 'keyword',\n    begin: '\\\\bsignal\\\\b',\n    starts: {\n      className: 'string',\n      end: '(\\\\(|:|=|;|,|//|/\\\\*|$)',\n      returnEnd: true\n    }\n  };\n\n  // id: is special in QML. When we see id: we want to mark the id: as attribute and\n  // emphasize the token following.\n  const ID_ID = {\n    className: 'attribute',\n    begin: '\\\\bid\\\\s*:',\n    starts: {\n      className: 'string',\n      end: QML_IDENT_RE,\n      returnEnd: false\n    }\n  };\n\n  // Find QML object attribute. An attribute is a QML identifier followed by :.\n  // Unfortunately it's hard to know where it ends, as it may contain scalars,\n  // objects, object definitions, or javascript. The true end is either when the parent\n  // ends or the next attribute is detected.\n  const QML_ATTRIBUTE = {\n    begin: QML_IDENT_RE + '\\\\s*:',\n    returnBegin: true,\n    contains: [\n      {\n        className: 'attribute',\n        begin: QML_IDENT_RE,\n        end: '\\\\s*:',\n        excludeEnd: true,\n        relevance: 0\n      }\n    ],\n    relevance: 0\n  };\n\n  // Find QML object. A QML object is a QML identifier followed by { and ends at the matching }.\n  // All we really care about is finding IDENT followed by { and just mark up the IDENT and ignore the {.\n  const QML_OBJECT = {\n    begin: regex.concat(QML_IDENT_RE, /\\s*\\{/),\n    end: /\\{/,\n    returnBegin: true,\n    relevance: 0,\n    contains: [ hljs.inherit(hljs.TITLE_MODE, { begin: QML_IDENT_RE }) ]\n  };\n\n  return {\n    name: 'QML',\n    aliases: [ 'qt' ],\n    case_insensitive: false,\n    keywords: KEYWORDS,\n    contains: [\n      {\n        className: 'meta',\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      { // template string\n        className: 'string',\n        begin: '`',\n        end: '`',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          {\n            className: 'subst',\n            begin: '\\\\$\\\\{',\n            end: '\\\\}'\n          }\n        ]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'number',\n        variants: [\n          { begin: '\\\\b(0[bB][01]+)' },\n          { begin: '\\\\b(0[oO][0-7]+)' },\n          { begin: hljs.C_NUMBER_RE }\n        ],\n        relevance: 0\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          { // E4X / JSX\n            begin: /</,\n            end: />\\s*[);\\]]/,\n            relevance: 0,\n            subLanguage: 'xml'\n          }\n        ],\n        relevance: 0\n      },\n      SIGNAL,\n      PROPERTY,\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: /\\{/,\n        excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, { begin: /[A-Za-z$_][0-9A-Za-z$_]*/ }),\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            contains: [\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        // hack: prevents detection of keywords after dots\n        begin: '\\\\.' + hljs.IDENT_RE,\n        relevance: 0\n      },\n      ID_ID,\n      QML_ATTRIBUTE,\n      QML_OBJECT\n    ],\n    illegal: /#/\n  };\n}\n\nmodule.exports = qml;\n"]},"metadata":{},"sourceType":"script"}